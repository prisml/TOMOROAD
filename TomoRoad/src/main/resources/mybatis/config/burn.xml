<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="burn"> 
	<resultMap type="burnVO" id="burnRM">
		<result property="postedTime" column="posted_time" />
		<result property="stationName" column="station_name" />
		<result property="memberId" column="member_id" />
	</resultMap>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from burn_board
	</select>

	<select id="getBurnList" parameterType="pagingBean" resultType="burnVO" resultMap="burnRM">		
		select A.* from(select row_number() over (order by b.no desc) as rnum, b.no, b.title, b.station_name, b.member_id, b.posted_time, c.commentcount, b.hits 
		from BURN_BOARD b, (select burn_no, count(*) as commentcount from burn_comment where state='comment' group by burn_no) c
		where c.burn_no (+)= b.no) A
		where rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	
	<select id="findBurnByNo" resultType="burnVO" resultMap="burnRM">
		select A.* from 
		(select b.no, b.title, b.station_name, b.member_id, b.content, b.hits,
		to_char(b.posted_time,'YYYY/MM/DD HH24:MI') as posted_time, c.commentcount from burn_board b, (select burn_no, count(*) commentcount from burn_comment where state='comment' group by burn_no) c 
		where c.burn_no (+)= b.no ) A 
		where no = #{value}
	</select>
	
	<insert id="writeBurn" parameterType="burnVO">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select burn_board_seq.nextval from dual
		</selectKey>
		insert into burn_board(no, title, posted_time, content, station_name, member_id, hits)
		values(#{no},#{title}, sysdate, #{content}, #{stationName}, #{memberId}, #{hits})	
	</insert>
	
	<update id="updateHits">
		update burn_board set hits=hits+1 where no = #{value}
	</update>
	<!-- 댓글 -->
	<select id="findBurnCommentByNo" resultType="burnCommentVO">		
		select c.no, c.content, c.posted_time, c.recomment, c.burn_no, c.member_id, c.state, m.profile 
		from BURN_COMMENT c, member m
		where c.member_id=m.id and c.burn_no=#{value} order by c.no asc	
	</select>
	<select id="findCommentMemberId" resultType="String">
		select member_id from burn_comment where no=#{value}
	</select>
	<insert id="registeComment" parameterType="burnCommentVO">
		insert into burn_comment (no,content,posted_time,burn_no,member_id) 
		values(burn_comment_seq.nextval,#{content},sysdate,#{burn_no},#{member_id}) 
	</insert>
	<insert id="replyComment" parameterType="burnCommentVO">
		insert into burn_comment (no,content,posted_time,burn_no,recomment,member_id) 
		values(burn_comment_seq.nextval,#{content},sysdate,#{burn_no},#{recomment},#{member_id}) 
	</insert>
	<update id="deleteComment" parameterType="burnCommentVO">
		update burn_comment set state=#{state} where no=#{no} and member_id =#{member_id}
	</update>
	<update id="updateComment" parameterType="burnCommentVO">
		update burn_comment set content=#{content} where no=#{no} and member_id =#{member_id}
	</update>
	<!-- 댓글끝 -->
	<update id="updateBurn" parameterType="burnVO">
		update burn_board
		set	title = #{title}, content = #{content}, station_name = #{stationName}
		where no=#{no}
	</update>
	
	<delete id="deleteBurn">
		delete from burn_board where no=#{value}
	</delete>
	
	<select id="getTotalCountByStation" resultType="int">
		select count(*) from burn_board where station_name = #{value}
	</select>
	
	<select id="getBurnListByStation" parameterType="map" resultMap="burnRM" resultType="burnVO">		
		select A.* from(select row_number() over (order by b.no desc) as rnum, b.no, b.title, b.station_name, b.member_id, b.posted_time, c.commentcount, b.hits 
		from BURN_BOARD b, (select burn_no, count(*) as commentcount from burn_comment where state='comment' group by burn_no) c
		where c.burn_no (+)= b.no and b.station_name = #{stationName}) A
		where rnum between #{pagingBean.startRowNumber} and #{pagingBean.endRowNumber}
	</select>
	
	<select id="getStationNameList" resultType="string">
		select distinct name from station order by name asc
	</select>
	
	
	
	<resultMap type="messageVO" id="messageRM">
		<result property="no" column="m_no" />
		<result property="time" column="m_time" />
		<result property="sender" column="m_sender" />
		<result property="receiver" column="m_receiver" />
		<result property="text" column="m_content" />
		<result property="checked" column="m_checked" />
	</resultMap>
	
	<select id="isNewMsg" resultType="int" parameterType="string">
		select count(*) from message where m_receiver = #{value} and m_checked =1 
	</select>
	
	<select id="findId" resultType="string">
		select id from member where id like '%' || #{value} || '%'
	</select>	
	
	<select id="getMessageList" resultMap="messageRM" resultType="messageVO">
		select * from message where m_sender in(#{sender},#{receiver}) and m_receiver in (#{sender},#{receiver}) order by m_time asc
	</select>
	
	<insert id="sendMessage" parameterType="map">
		insert into message(m_no, m_sender, m_receiver, m_time, m_content, m_checked) values(message_sequence.nextval,#{sender},#{receiver},sysdate,#{text},1)
	</insert>
</mapper>